import argparse


parser = argparse.ArgumentParser()
parser.add_argument("num_elfs", type=int)


class Elf:
    def __init__(self, n, left=None, right=None):
        self.n = n
        self.left = left
        self.right = right
        self.num_presents = 1

    def leave_if_needed(self):
        if self.num_presents == 0:
            self.left.right = self.right
            self.right.left = self.left


def solve(num_elfs):
    first_elf = Elf(1)
    prev_elf = first_elf
    for i in range(2, num_elfs + 1):
        curr_elf = Elf(i, right=prev_elf)
        prev_elf.left = curr_elf
        prev_elf = curr_elf
    prev_elf.right = first_elf

    curr_elf = first_elf
    while True:
        if curr_elf.n == curr_elf.right.n:
            return curr_elf.n

        curr_elf.num_presents += curr_elf.left.num_presents
        curr_elf.left.num_presents = 0





    return


if __name__ == '__main__':
    args = parser.parse_args()
    print('Part 1: {:d}'.format(args.num_elfs))
